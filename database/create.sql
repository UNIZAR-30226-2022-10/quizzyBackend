CREATE TABLE CATEGORIES
(
    CATEGORY_NAME   VARCHAR(15) PRIMARY KEY
);

CREATE TABLE QUESTIONS
(
    QUESTION_ID          SERIAL PRIMARY KEY,
    CATEGORY_NAME        VARCHAR(15)    NOT NULL,
    QUESTION             VARCHAR(200)   NOT NULL,
    CORRECT_ANSWER       VARCHAR(50)    NOT NULL,
    INCORRECT_ANSWER_1   VARCHAR(50)    NOT NULL,
    INCORRECT_ANSWER_2   VARCHAR(50)    NOT NULL,
    INCORRECT_ANSWER_3   VARCHAR(50)    NOT NULL,
    FOREIGN KEY (CATEGORY_NAME) REFERENCES CATEGORIES(CATEGORY_NAME) ON DELETE CASCADE
);



CREATE TABLE COSMETICS
(
	COSMETIC_ID			SERIAL PRIMARY KEY,
	PRICE				INTEGER
);

CREATE TABLE WILDCARDS
(
	WILDCARD_ID			SERIAL PRIMARY KEY,
	PRICE				INTEGER,
	DESCRIPTION			VARCHAR(500)
);

CREATE TABLE ACHIEVEMENTS
(
	ACHIEVEMENT_ID		SERIAL PRIMARY KEY
);

CREATE TABLE USERS
(
	USER_ID				SERIAL PRIMARY KEY,
	NICKNAME			VARCHAR(20),
	EMAIL				VARCHAR(50),
	PASSWORD			CHAR(64),
	WALLET				INTEGER,
	PUBLIC_WINS			INTEGER,
	PRIVATE_WINS		INTEGER,
	ACTUAL_COSMETIC		INTEGER,
	FOREIGN KEY (ACTUAL_COSMETIC) REFERENCES COSMETICS(COSMETIC_ID) ON DELETE CASCADE
);

CREATE TABLE USER_COSMETICS
(
	COSMETIC_ID 		INTEGER,
	USER_ID				INTEGER,
	FOREIGN KEY (COSMETIC_ID) REFERENCES COSMETICS(COSMETIC_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (COSMETIC_ID, USER_ID)
);

CREATE TABLE USER_WILDCARDS
(
	WILDCARD_ID 		INTEGER,
	USER_ID				INTEGER,
	CUANTITY			INTEGER,
	FOREIGN KEY (WILDCARD_ID) REFERENCES WILDCARDS(WILDCARD_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (WILDCARD_ID, USER_ID)
);

CREATE TABLE USER_ACHIEVEMENTS
(
	ACHIEVEMENT_ID 		INTEGER,
	USER_ID				INTEGER,
	FOREIGN KEY (ACHIEVEMENT_ID) REFERENCES ACHIEVEMENTS(ACHIEVEMENT_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (ACHIEVEMENT_ID, USER_ID)
);

CREATE TABLE FRIENDS
(
	USER_ID_1 			INTEGER,
	USER_ID_2			INTEGER,
	FOREIGN KEY (USER_ID_1) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID_2) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (USER_ID_1, USER_ID_2)
);

CREATE TABLE INDIVIDUAL_GAME
(
	GAME_ID				SERIAL PRIMARY KEY,
	FINISHED			BOOLEAN,
	DIFFICULTY			VARCHAR(6),
	CORRECT_ANSWERS		INTEGER,
	TOTAL_ANSWERS		INTEGER,
	USER_ID				INTEGER,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE PUBLIC_GAME
(
	GAME_ID				SERIAL PRIMARY KEY,
	FINISHED			BOOLEAN,
	WINNER				INTEGER,
	FOREIGN KEY (WINNER) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE USER_PUBLIC_GAMES
(
	GAME_ID				INTEGER,
	USER_ID				INTEGER,
	CORRECT_ANSWERS		INTEGER,
	TOTAL_ANSWERS		INTEGER,
	FOREIGN KEY (GAME_ID) REFERENCES PUBLIC_GAME(GAME_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (GAME_ID, USER_ID)
);

CREATE TABLE PUBLIC_GAMES_STATE
(
	GAME_ID				INTEGER,
	USER_ID				INTEGER,
	POSITION			INTEGER,
	SPORTS_TOKEN		BOOLEAN,
	SCIENCE_TOKEN		BOOLEAN,
	ENTERTAINMENT_TOKEN	BOOLEAN,
	HISTORY_TOKEN		BOOLEAN,
	ART_TOKEN			BOOLEAN,
	GEOGRAPHY_TOKEN		BOOLEAN,
	FOREIGN KEY (GAME_ID) REFERENCES PUBLIC_GAME(GAME_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (GAME_ID, USER_ID)
);

CREATE TABLE PRIVATE_GAME
(
	GAME_ID				SERIAL PRIMARY KEY,
	FINISHED			BOOLEAN,
	WINNER				INTEGER,
	WILDCARDS_ENABLE	BOOLEAN,
	ANSWER_TIME			INTEGER,
	ACCESS_KEY			INTEGER,
	FOREIGN KEY (WINNER) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE USER_PRIVATE_GAMES
(
	GAME_ID				INTEGER,
	USER_ID				INTEGER,
	CORRECT_ANSWERS		INTEGER,
	TOTAL_ANSWERS		INTEGER,
	FOREIGN KEY (GAME_ID) REFERENCES PRIVATE_GAME(GAME_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (GAME_ID, USER_ID)
);

CREATE TABLE PRIVATE_GAMES_STATE
(
	GAME_ID				INTEGER,
	USER_ID				INTEGER,
	POSITION			INTEGER,
	SPORTS_TOKEN		BOOLEAN,
	SCIENCE_TOKEN		BOOLEAN,
	ENTERTAINMENT_TOKEN	BOOLEAN,
	HISTORY_TOKEN		BOOLEAN,
	ART_TOKEN			BOOLEAN,
	GEOGRAPHY_TOKEN		BOOLEAN,
	FOREIGN KEY (GAME_ID) REFERENCES PRIVATE_GAME(GAME_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (GAME_ID, USER_ID)
);